name: 构建Windows应用

on:
  push:
    branches: [main, master]
    tags:
      - "v*" # 匹配所有版本标签
  pull_request:
    branches: [main, master]
  workflow_dispatch: # 允许手动触发

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      PLAYWRIGHT_BROWSERS_PATH: 0 # 强制打包浏览器
    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller==5.13.0 pillow==10.0.0
          pip install requests playwright selenium pytz tzlocal schedule

          # 显式安装UI框架 (根据项目需要选择)
          pip install pyqt5

          # 显式安装Playwright浏览器
          python -m playwright install chromium
          python -m playwright install-deps chromium

      - name: 打印环境信息
        run: |
          python --version
          pip list
          echo "当前目录内容:"
          dir

      - name: 清理旧构建
        run: |
          if exist build rmdir /s /q build
          if exist dist rmdir /s /q dist

      - name: 构建应用
        run: |
          pyinstaller kwai_tool.spec
          dir dist

      - name: 打包构建产物
        run: |
          cd dist
          powershell Compress-Archive -Path "快手账号管理工具.exe" -DestinationPath "快手账号管理工具-Windows.zip"
          cd ..

      - name: 上传构建产物
        uses: actions/upload-artifact@v3
        with:
          name: 快手账号管理工具-Windows
          path: dist/快手账号管理工具-Windows.zip
          retention-days: 7

  # 创建发布版本（仅在打标签时）
  create-release:
    needs: [build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: 获取Windows构建产物
        uses: actions/download-artifact@v3
        with:
          name: 快手账号管理工具-Windows
          path: ./

      - name: 创建Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            快手账号管理工具-Windows.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
