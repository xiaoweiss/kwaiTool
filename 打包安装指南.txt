# 快手账号管理工具 - 打包安装指南

## 打包步骤

1. 确保已安装所有必要的依赖：
   ```
   pip install -r requirements.txt
   pip install pyinstaller
   ```

2. 运行打包脚本：
   ```
   python package.py
   ```

3. 打包完成后，所有文件将位于 `dist` 目录中

## 使用打包后的程序

### Windows用户

1. 进入 `dist` 目录
2. 双击 `启动快手账号管理工具.bat` 或直接运行 `快手账号管理工具.exe`
3. 首次运行前，请确保已安装Playwright浏览器：
   ```
   playwright install
   ```

## 配置说明

- `curl_config.json`: API配置文件，可修改服务器地址和接口信息
- `accounts/`: 账号数据目录

## 常见问题

1. **程序无法启动**
   - 检查是否已安装Playwright浏览器
   - 确保系统安装了Visual C++ Redistributable

2. **无法连接到API**
   - 检查 `curl_config.json` 中的服务器地址是否正确
   - 确认网络连接是否正常

3. **Chrome浏览器路径问题**
   - 程序会自动尝试检测Chrome浏览器
   - 如果自动检测失败，可手动选择Chrome浏览器路径

## 分发说明

分发时，请包含以下文件：
- `dist/` 目录中的所有文件
- 简单的安装说明，包括安装Playwright浏览器的步骤

## GitHub Actions自动打包

本项目提供了多种不同的GitHub Actions工作流，用于自动打包应用程序：

### 工作流1: 极简打包工作流（推荐）
- 使用最少的依赖，最可靠的打包方式
- 生成详细的文件信息，方便确认打包结果
- 保持运行器活动60分钟，足够时间获取文件
- 适用于GitHub Actions其他方法都失败的情况

### 工作流2: 多种文件分享服务（build_direct.yml）
- 同时使用多种文件分享服务上传构建结果
- 提供多个下载链接，增加成功率
- 包括file.io、WeTransfer和Gofile三种服务
- 不依赖GitHub的artifact功能

### 工作流3: 标准方式（build.yml）
- 使用GitHub的artifact功能上传构建结果
- 工作流完成后，可以从Artifacts部分下载构建结果
- 如果出现"Missing download info"错误，请尝试其他工作流

### 工作流4: 备选方案（build_alternative.yml）
- 不使用artifact上传，而是保持运行器活动
- 工作流运行时，会保持运行器活动30分钟
- 您可以通过远程桌面或其他方式连接到运行器获取文件

### 工作流5: 分享链接（build_transfer.yml）
- 使用Transfer.sh服务上传和分享构建结果
- 工作流完成后，查看日志获取下载链接
- 链接有效期为5天，最多可下载10次

### 使用步骤
1. 将代码推送到GitHub仓库
2. 在GitHub仓库页面，点击"Actions"选项卡
3. 选择一个工作流（推荐使用"极简打包工作流"）
4. 点击"Run workflow"按钮手动触发打包
5. 根据选择的工作流，按照不同方式获取构建结果

## 技术支持

如有问题，请联系技术支持。 